# Generated by Django 5.2.7 on 2025-10-05 19:08

import accounts.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('region_id', models.AutoField(primary_key=True, serialize=False)),
                ('region_description', models.CharField(max_length=255, verbose_name='Region Description')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'ordering': ['region_description'],
            },
        ),
        migrations.CreateModel(
            name='NorthWindUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('timezone', models.CharField(choices=accounts.models.get_timezone_choices, default='UTC', max_length=50, verbose_name='Timezone')),
                ('custom_id', models.CharField(max_length=6)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('company_name', models.CharField(db_index=True, max_length=255, verbose_name='Company Name')),
                ('contact_title', models.CharField(blank=True, max_length=100, verbose_name='Contact Title')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Address')),
                ('city', models.CharField(blank=True, db_index=True, max_length=100, verbose_name='City')),
                ('region', models.CharField(blank=True, max_length=100, verbose_name='Region')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, db_index=True, max_length=100, verbose_name='Country')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Phone')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Job Title')),
                ('title_of_courtesy', models.CharField(blank=True, max_length=25, verbose_name='Title of Courtesy')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('hire_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='Hire Date')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('region', models.CharField(blank=True, max_length=100, verbose_name='Region')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('home_phone', models.CharField(blank=True, max_length=50, verbose_name='Home Phone')),
                ('extension', models.CharField(blank=True, max_length=10, verbose_name='Extension')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('reports_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='accounts.employee', verbose_name='Reports To')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('territory_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('territory_description', models.CharField(max_length=255, verbose_name='Territory Description')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='territories', to='accounts.region', verbose_name='Region')),
            ],
            options={
                'verbose_name': 'Territory',
                'verbose_name_plural': 'Territories',
                'ordering': ['territory_description'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeTerritory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_territories', to='accounts.employee', verbose_name='Employee')),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territory_employees', to='accounts.territory', verbose_name='Territory')),
            ],
            options={
                'verbose_name': 'Employee Territory',
                'verbose_name_plural': 'Employee Territories',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='territories',
            field=models.ManyToManyField(related_name='employees', through='accounts.EmployeeTerritory', to='accounts.territory', verbose_name='Territories'),
        ),
        migrations.AddIndex(
            model_name='northwinduser',
            index=models.Index(fields=['last_name', 'first_name'], name='auth_user_last_na_11540f_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['city', 'country'], name='accounts_cu_city_e216ef_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeterritory',
            index=models.Index(fields=['employee', 'territory'], name='accounts_em_employe_17da1b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='employeeterritory',
            unique_together={('employee', 'territory')},
        ),
    ]
